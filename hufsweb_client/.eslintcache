[{"C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\index.js":"1","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\App.js":"2","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\LandingPage\\LandingPage.js":"3","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\LoginPage\\LoginPage.js":"4","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"5","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\LandingPage\\Center.js":"6","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\NavBar\\NavContainer.js":"7","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\NavBar\\NavBar.js":"8","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\_actions\\user_action.js":"9","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\_actions\\types.js":"10","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\post\\Post.js":"11","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\post\\List.js":"12","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\post\\PostView.js":"13","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\Footer\\Footer.js":"14"},{"size":274,"mtime":1612594669316,"results":"15","hashOfConfig":"16"},{"size":881,"mtime":1612594670626,"results":"17","hashOfConfig":"16"},{"size":407,"mtime":1612621772033,"results":"18","hashOfConfig":"16"},{"size":691,"mtime":1612614795031,"results":"19","hashOfConfig":"16"},{"size":2947,"mtime":1612526985522,"results":"20","hashOfConfig":"16"},{"size":426,"mtime":1612621798473,"results":"21","hashOfConfig":"16"},{"size":2939,"mtime":1612622941486,"results":"22","hashOfConfig":"16"},{"size":409,"mtime":1612525962779,"results":"23","hashOfConfig":"16"},{"size":595,"mtime":1612525962742,"results":"24","hashOfConfig":"16"},{"size":142,"mtime":1612525962739,"results":"25","hashOfConfig":"16"},{"size":1739,"mtime":1612594668185,"results":"26","hashOfConfig":"16"},{"size":5194,"mtime":1612594662183,"results":"27","hashOfConfig":"16"},{"size":803,"mtime":1612594666562,"results":"28","hashOfConfig":"16"},{"size":672,"mtime":1612622795305,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"182ojzy",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\index.js",["67","68"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n<App />\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n",["69","70"],"C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\App.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\LoginPage\\LoginPage.js",["71","72"],"import React from \"react\";\r\nimport \"./LoginPage.css\";\r\nfunction LoginPage() {\r\n  return (\r\n    <div>\r\n      <form className=\"log-in-form\">\r\n          <input type=\"string\" placeholder=\"로그인\" />\r\n        <br/>\r\n          <input type=\"password\" placeholder=\"Password\" />\r\n        \r\n        <span>\r\n        <a href=\"#\" className=\"myButton\">로그인</a>\r\n        </span>\r\n        <p className=\"text-center\">\r\n            <span>회원가입</span>\r\n\r\n            <span style={{position:\"relative\", marginLeft:\"40px\"}}>\r\n          <a href=\"#\">아이디/비밀번호 찾기</a>\r\n            </span>\r\n            \r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["73"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\nimport \"./RegisterPage.css\";\r\nfunction RegisterPage(props) {\r\n  const [Id, setId] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n\r\n  const [PasswordMatched, setPasswordMatched] = useState(true);\r\n\r\n  // handler 만들기\r\n  const onIdHandler = (event) => {\r\n    setId(event.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  const onConfirmPasswordHandler = (event) => {\r\n    setConfirmPassword(event.currentTarget.value);\r\n    \r\n  };\r\n  \r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n  const onSubmitHandler = (event) => {\r\n    console.log(\"submit\");\r\n    event.preventDefault();\r\n    //정규식으로 아이디 비밀번호 이메일 검증 필요\r\n    if (Password !== ConfirmPassword) {\r\n      setPasswordMatched(false);\r\n      return alert(\"비밀번호 재확인\");\r\n    }\r\n\r\n    let body = {\r\n      id: Id,\r\n      password: Password,\r\n      email: Email,\r\n    };\r\n\r\n    registerUser(body); // to action dispatch필요\r\n  };\r\n\r\n  const regType1 = /^[A-Za-z0-9+]{4,12}$/;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">헤더</div>\r\n      <div className=\"content\">\r\n        <form onSubmit={onSubmitHandler}>\r\n          <div>\r\n            <h3>\r\n              <label>아이디</label>\r\n            </h3>\r\n            <input type=\"text\" value={Id} onChange={onIdHandler} />\r\n            {regType1.test(Id) ? (\r\n              <input type=\"checkbox\" checked />\r\n            ) : (\r\n              <input type=\"checkbox\" />\r\n            )}{\" \"}\r\n            {/* 정규식 검증  */}\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"join_title\">\r\n              <label>비밀번호</label>\r\n            </h3>\r\n            <input\r\n              type=\"password\"\r\n              value={Password}\r\n              onChange={onPasswordHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"join_title\">\r\n              <label>비밀번호 재확인</label>\r\n            </h3>\r\n            <input\r\n              type=\"password\"\r\n              value={ConfirmPassword}\r\n              onChange={onConfirmPasswordHandler}\r\n            />\r\n            \r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"join_title\">\r\n              <label>본인확인 이메일</label>\r\n            </h3>\r\n            <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n          </div>\r\n          <br />\r\n          <input type=\"submit\" value=\"가입\" />\r\n          {PasswordMatched ? <h4>일치</h4> : <h4>불일치</h4>}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\LandingPage\\Center.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\NavBar\\NavContainer.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\NavBar\\NavBar.js",[],"C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\_actions\\user_action.js",["74"],"import axios from 'axios';\r\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER} from './types';\r\n\r\n\r\nexport function loginUser(dataTosubmit){\r\n\r\n    const request = axios.post(\"/api/users/login\", dataTosubmit)\r\n        .then(response => response.data)\r\n\r\n        return {\r\n            type: LOGIN_USER,\r\n            payload: request\r\n        }\r\n}\r\n\r\nexport function registerUser(dataTosubmit){\r\n\r\n    const request = axios.post(\"/api/users/registers\", dataTosubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n// authUser","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\_actions\\types.js",["75"],"import { registerUser } from \"../_actions/user_action\"\r\n\r\nexport const REGISTER_USER = \"register_user\"\r\nexport const LOGIN_USER = \"login_user\"","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\post\\Post.js",["76","77"],"import React, { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport axios from \"axios\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { List } from \"./List\";\r\nimport \"./Post.css\"\r\nfunction Post() {\r\n  const [list, setList] = useState([]);\r\n  const [perPage, setperPage] = useState(0)  // 시작 페이지는 0 \r\n  useEffect(() => {\r\n    //  getPostList from DB //\r\n    setList(List);\r\n  }, []);\r\n\r\n  const changePage = (data) => {\r\n    let selected = data.selected;  // 클릭한 숫자-1이 selected 값\r\n    console.log(list.slice(selected*4, selected*4 +4)); // 4 = 페이지 당 보여줄 게시글 수\r\n    setperPage(selected) \r\n  };\r\n  return (\r\n    <div>\r\n      <h3>안녕하세요</h3>\r\n      {list.slice(perPage*4, perPage*4+4).map((e, index) => {           {/*slice이용해 페이지에 해당하는 게시글만 map함수 실행*/}\r\n        return (\r\n          <tbody key={index}>\r\n            <td> {e.no} </td>\r\n            <td> \r\n            <Link to={`/post/${e.no}`}>{e.content}</Link>\r\n            </td>\r\n            <td> {e.content} </td>\r\n            <tr />\r\n          </tbody>\r\n        );\r\n      })} {/* 총 페이지 수 = 총 데이터 수  나누기 페이지 당 게시글 수 */}\r\n      <ReactPaginate\r\n        pageCount={Math.ceil(list.length / 4)} \r\n        breakLabel={\"...\"}\r\n        pageRangeDisplayed={4}\r\n        onPageChange={changePage} \r\n        previousLabel={\"이전\"}\r\n        nextLabel={\"다음\"}\r\n        containerClassName={\"pageContainer\"}\r\n        pageClassName={\"pageList\"}\r\n        previousClassName={\"previousBtn\"}\r\n        nextClassName={\"nextBtn\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Post;\r\n\r\n// 1. 페이지 레이아웃\r\n// 3. pagination\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\post\\List.js",["78"],"import React from 'react'\r\n\r\nexport let List = \r\n    [\r\n        {\r\n          no: 1,\r\n          title: \"첫번째 게시글입니다.\",\r\n          content: \"첫번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 6,\r\n        },\r\n        {\r\n          no: 2,\r\n          title: \"두번째 게시글입니다.\",\r\n          content: \"두번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 5,\r\n        },\r\n        {\r\n          no: 3,\r\n          title: \"세번째 게시글입니다.\",\r\n          content: \"세번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 1,\r\n        },\r\n        {\r\n          no: 4,\r\n          title: \"네번째 게시글입니다.\",\r\n          content: \"네번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 2,\r\n        },{\r\n          no: 5,\r\n          title: \"첫번째 게시글입니다.\",\r\n          content: \"첫번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 6,\r\n        },\r\n        {\r\n          no: 6,\r\n          title: \"두번째 게시글입니다.\",\r\n          content: \"두번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 5,\r\n        },\r\n        {\r\n          no: 7,\r\n          title: \"세번째 게시글입니다.\",\r\n          content: \"세번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 1,\r\n        },\r\n        {\r\n          no: 8,\r\n          title: \"네번째 게시글입니다.\",\r\n          content: \"네번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 2,\r\n        },{\r\n          no: 9,\r\n          title: \"첫번째 게시글입니다.\",\r\n          content: \"첫번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 6,\r\n        },\r\n        {\r\n          no: 10,\r\n          title: \"두번째 게시글입니다.\",\r\n          content: \"두번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 5,\r\n        },\r\n        {\r\n          no: 11,\r\n          title: \"세번째 게시글입니다.\",\r\n          content: \"세번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 1,\r\n        },\r\n        {\r\n          no: 12,\r\n          title: \"네번째 게시글입니다.\",\r\n          content: \"네번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 2,\r\n        },\r\n      \r\n        {\r\n          no: 13,\r\n          title: \"첫번째 게시글입니다.\",\r\n          content: \"첫번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 6,\r\n        },\r\n        {\r\n          no: 14,\r\n          title: \"두번째 게시글입니다.\",\r\n          content: \"두번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 5,\r\n        },\r\n        {\r\n          no: 15,\r\n          title: \"세번째 게시글입니다.\",\r\n          content: \"세번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 1,\r\n        },\r\n        {\r\n          no: 16,\r\n          title: \"네번째 게시글입니다.\",\r\n          content: \"네번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 2,\r\n        },{\r\n          no: 17,\r\n          title: \"첫번째 게시글입니다.\",\r\n          content: \"첫번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 6,\r\n        },\r\n        {\r\n          no: 18,\r\n          title: \"두번째 게시글입니다.\",\r\n          content: \"두번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 5,\r\n        },\r\n        {\r\n          no: 19,\r\n          title: \"세번째 게시글입니다.\",\r\n          content: \"세번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 1,\r\n        },\r\n        {\r\n          no: 20,\r\n          title: \"네번째 게시글입니다.\",\r\n          content: \"네번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 2,\r\n        },{\r\n          no: 21,\r\n          title: \"첫번째 게시글입니다.\",\r\n          content: \"첫번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 6,\r\n        },\r\n        {\r\n          no: 22,\r\n          title: \"두번째 게시글입니다.\",\r\n          content: \"두번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 5,\r\n        },\r\n        {\r\n          no: 23,\r\n          title: \"세번째 게시글입니다.\",\r\n          content: \"세번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 1,\r\n        },\r\n        {\r\n          no: 24,\r\n          title: \"네번째 게시글입니다.\",\r\n          content: \"네번째 게시글 내용입니다.\",\r\n          createDate: \"2020-10-25\",\r\n          readCount: 2,\r\n        },\r\n      \r\n    ]\r\n\r\n\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\post\\PostView.js",["79"],"import React, { useEffect, useState } from \"react\";\r\nimport { List } from \"./List\";  // 백엔드 db에서 가져오게 변경.\r\nfunction PostView({ history, location, match }) {\r\n  const [list, setlist] = useState({});\r\n  const num = +match.params.no; // +string을 이용해 숫자형으로 변경\r\n\r\n  // const getPostByNum = (num) => {\r\n  //     list\r\n  // }\r\n\r\n  useEffect(() => {\r\n    setlist(List.find((e) => e.no === num));  // 가져온 데이터에서 url번호와 맞는 게시글 객체를 가져와 저장.\r\n\r\n    console.log(num);\r\n  }, []);\r\n// url번호에 맞는 게시글이 없을 경우 에러 페이지 \r\n  return (\r\n    <div>\r\n      <h1>안녕하세요</h1>\r\n      {list ? <h2>{list.title}</h2> : <h3>없는 게시글</h3>}       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostView;\r\n","C:\\Users\\xoopp\\OneDrive\\문서\\hufs_web\\hufsweb_client\\src\\components\\views\\Footer\\Footer.js",[],{"ruleId":"80","severity":1,"message":"81","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":18},{"ruleId":"80","severity":1,"message":"84","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":21},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":12,"column":9,"nodeType":"91","endLine":12,"endColumn":42},{"ruleId":"89","severity":1,"message":"90","line":18,"column":11,"nodeType":"91","endLine":18,"endColumn":23},{"ruleId":"80","severity":1,"message":"92","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":21},{"ruleId":"80","severity":1,"message":"93","line":2,"column":37,"nodeType":"82","messageId":"83","endLine":2,"endColumn":46},{"ruleId":"80","severity":1,"message":"94","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":22},{"ruleId":"80","severity":1,"message":"95","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":13},{"ruleId":"96","severity":1,"message":"97","line":23,"column":73,"nodeType":"98","messageId":"99","endLine":23,"endColumn":111},{"ruleId":"80","severity":1,"message":"100","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":15,"column":6,"nodeType":"103","endLine":15,"endColumn":8,"suggestions":"104"},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useDispatch' is defined but never used.","'AUTH_USER' is defined but never used.","'registerUser' is defined but never used.","'axios' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'num'. Either include it or remove the dependency array.","ArrayExpression",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [num]",{"range":"110","text":"111"},[459,461],"[num]"]